<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.article.ArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="com.blog.mapper.article.ArticleComment" >
    <id column="article_comment_id" property="articleCommentId" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    article_comment_id, article_id, user_id, comment_id, content, email, username, ip, 
    created_date, updated_date, is_valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from article_comment
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article_comment
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.mapper.article.ArticleComment" >
    <selectKey resultType="java.lang.Integer" keyProperty="articleCommentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article_comment (article_id, user_id, comment_id, 
      content, email, username, 
      ip, created_date, updated_date, 
      is_valid)
    values (#{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}, 
      #{isValid,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.mapper.article.ArticleComment" >
    <selectKey resultType="java.lang.Integer" keyProperty="articleCommentId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="updatedDate != null" >
        updated_date,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.mapper.article.ArticleComment" >
    update article_comment
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
    </set>
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.mapper.article.ArticleComment" >
    update article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=TINYINT}
    where article_comment_id = #{articleCommentId,jdbcType=INTEGER}
  </update>
</mapper>